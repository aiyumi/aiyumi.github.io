<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Aiyumi.Github.Io (Posts sobre linux)</title><link>https://aiyumi.github.io/</link><description></description><atom:link href="https://aiyumi.github.io/pt/tag/linux.xml" type="application/rss+xml" rel="self"></atom:link><language>pt_br</language><copyright>Contents © 2020 Aiyumi &lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Atribuição-CompartilhaIgual 4.0 Internacional&lt;/a&gt;</copyright><lastBuildDate>Tue, 20 Oct 2020 00:37:28 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Slint, uma Distribuição Linux Baseada no Slackware e Acessível para Deficientes Visuais</title><link>https://aiyumi.github.io/pt/blog/slint-linux-review/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Como alguns já sabem, minha distribuição Linux preferida é o Slackware. No entanto, não é uma distro fácil para os usuários com deficiência visual instalar. O instalador do Slackware não é acessível, a não ser que os usuários tenham um sintetizador de voz baseado em hardware (não tenho, e a maioria dos outros deficientes visuais provavelmente também não), o que significa que eles precisariam de ajuda de alguém que enxerga para instalar o Slackware e depois instalar os leitores de tela nele. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aiyumi.github.io/pt/blog/slint-linux-review/"&gt;Ler o artigo completo…&lt;/a&gt; (9 mín restante para leitura)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/slint-linux-review/</guid><pubDate>Mon, 12 Mar 2018 18:02:11 GMT</pubDate></item><item><title>Instalando o Orca no Slackware 14.2</title><link>https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14.2/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Estas são instruções para instalar o leitor de telas Orca no Slackware 14.2 &lt;strong&gt;sem&lt;/strong&gt; o ambiente de desktop Gnome. Não é a versão do Orca mais recente, mas é a compatível com as versões das bibliotecas que vêm por padrão no Slackware (para instalar o Orca mais recente, seria necessário recompilar versões mais recentes de muitos dos programas que já vêm no Slackware e seria muito mais difícil).&lt;/p&gt;
&lt;p&gt;Do Slackware 14.1 para o 14.2, diminuiu bastante a quantidade de dependências, o que é uma coisa boa. A maioria das bibliotecas específicas do Gnome foram embora, não precisa mais recompilar programas que vinham no Slackware, e agora tudo que usa Python passou a depender do Python 3 em vez do Python 2. Se vierem mais dessas mudanças que facilitem as coisas, talvez logo seja possível que o Orca consiga entrar no Slackbuilds.org, aí não precisaremos mais ficar fazendo estes malabarismos com &lt;a href="https://github.com/aiyumi/slackware-scripts"&gt;meus scripts&lt;/a&gt;. Vamos ter esperanças!&lt;/p&gt;
&lt;p&gt;Para quem usou &lt;a href="https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14-0"&gt;minhas instruções e instalou o Orca no 14.0 ou 14.1&lt;/a&gt; e vai atualizar para o 14.2, precisa remover as dependências obsoletas com o comando abaixo (quem ainda não tem o Orca instalado não precisa usar este comando, mas olha só quantas dependências foram embora :D ):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;# removepkg gnome-mime-data gnome-vfs gnome-python libgnome libbonobo ORBit2 pyorbit
&lt;/pre&gt;

&lt;p&gt;Agora, as instruções de instalação propriamente ditas. Antes de mais nada, você precisa ter o &lt;a href="http://sbopkg.org/"&gt;Sbopkg&lt;/a&gt; instalado.&lt;/p&gt;
&lt;p&gt;Na verdade, o processo para baixar e instalar o Orca continua quase igual ao que era &lt;a href="https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14-0"&gt;antes&lt;/a&gt;. Se quiser, você pode ler as instruções anteriores para explicações mais detalhadas, mas resumindo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Baixe o meu repositório e configure o Sbopkg para usar meus scripts:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;# git clone https://github.com/aiyumi/slackware-scripts.git
# cd slackware-scripts
# cp -R slackbuilds /var/lib/sbopkg/aiyumisb
# cp slackbuilds/100-aiyumi.repo /etc/sbopkg/repos.d
# cp sbopkg-queuefiles/aiyumisb/accessibility/*.sqf /var/lib/sbopkg/queues
&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute o Sbopkg com o meu repositório:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;# sbopkg -V aiyumisb/local
&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se você ainda não tiver o Espeak (que o Orca usa por padrão), vá em "Queue" -&amp;gt; "Load", carregue o queuefile "espeakup" e instale. O Espeak será instalado junto com o Espeakup, que adiciona suporte a voz via Espeak ao Speakupp (leitor de telas para console, que é sempre bom ter).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vá em "Queue" -&amp;gt; "Load", carregue o queuefile "orca", mande instalar e espere até terminar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edite as configurações do Speech-Dispatcher em "/etc/speech-dispatcher/speechd.conf". Certifique-se de que o módulo do Espeak está sendo usado e configurado para falar no idioma de sua preferência (no meu caso, Português). As linhas relevantes são:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;# ----- VOICE PARAMETERS -----
DefaultLanguage "pt"

# -----OUTPUT MODULES CONFIGURATION-----
AddModule "espeak"       "sd_espeak"   "espeak.conf"

DefaultModule espeak

LanguageDefaultModule "pt"  "espeak"
&lt;/pre&gt;

&lt;p&gt;Para testar, use o comando "spd-say algumacoisa". Se sair som, então está funcionando!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Por último, copie o arquivo "/usr/doc/orca-*/orca.atspi2.xinitrc" para "~/.xinitrc" (é ele que seta as variáveis para ativar a acessibilidade na interface gráfica) e edite a última linha com o comando para iniciar o seu gerenciador de janelas ou desktop favorito (por exemplo, "startfluxbox" para o Fluxbox ou "startxfce4" para o XFCE).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pronto. Aí é só usar o comando "startx" para entrar na interface gráfica e ouvir o Orca abrir a matraca :D .&lt;/p&gt;
&lt;p&gt;Nota sobre o Firefox: nas instruções para o 14.0 e 14.1, eu tinha falado que o Firefox do Slack vinha com acessibilidade desabilitada e precisava ser recompilado, o que levava horas. A má notícia é que o Firefox do Slackware ainda vem sem acessibilidade. Mas a boa notícia é que eu descobri que não precisa compilar outro! Graças a este &lt;a href="http://whatthefrankiej.blogspot.com.br/2014/12/gnome-orca-on-slackware-141.html"&gt;post do Frankiej&lt;/a&gt;, fiquei sabendo &lt;a href="https://gist.github.com/ruario/9672798"&gt;deste script&lt;/a&gt; que baixa o binário do Firefox fornecido pela Mozilla (em que a acessibilidade funciona) e cria um pacote ".txz" para o Slackware que pode ser instalado com installpkg normalmente.&lt;/p&gt;
&lt;p&gt;Apesar do nome "latest-firefox", este script não se limita a baixar a última versão do Firefox. Na verdade, você pode usá-lo para baixar qualquer versão que quiser. É só passar a variável "VERSION" para o comando que executa o script. Por exemplo, no momento em que escrevo este post, o plugin do Java não funciona na última versão do Firefox porque tiraram o suporte à API que o plugin usa. Para quem precisa do plugin do Java, enquanto não sai uma versão do Java com um plugin compatível com o último Firefox, o jeito é usar uma versão anterior do Firefox onde o plugin do Java ainda funciona. A última versão do Firefox onde a API obsoleta funciona é a 51.0. Neste caso, o comando para obter o pacote do Firefox 51.0 para o Slack seria:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;# VERSION=51.0 ./latest-firefox.sh
&lt;/pre&gt;

&lt;p&gt;ou ainda, para o Firefox 51.0 com a interface em Português brasileiro:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;# VERSION=51.0 FFLANG=pt-BR ./latest-firefox.sh
&lt;/pre&gt;

&lt;p&gt;E o programa vai deixar o pacote pronto em "/tmp". Chega de ter que esperar três horas para compilar o Firefox a cada versão :P .&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14.2/</guid><pubDate>Thu, 23 Mar 2017 18:58:02 GMT</pubDate></item><item><title>Slackware 14.2, Leitores de Tela e PulseAudio</title><link>https://aiyumi.github.io/pt/blog/slack-14.2-srs-and-pulse/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Depois de um longo e tenebroso inverno (e primavera, e verão, e mais um pouco) finalmente estou no Slackware 14.2. Já faz quase um ano que saiu, mas eu estava sem coragem nem ânimo para atualizar, principalmente porque quando tentei atualizar a instalação no meu netbook (que serviu de cobaia como sempre), não tinha dado certo (é a primeira vez que tenho problemas tentando atualizar o Slackware). O sistema ficou sem som no meio da atualização e perdi o acesso aos meus programas leitores de tela dos quais eu dependo para fazer qualquer coisa no computador (ainda bem que foi no netbook e não na minha máquina principal!). Eu não estava conseguindo resolver e perdi a paciência de investigar, e acabei deixando de lado por um bom tempo. Agora que estou de férias do trabalho e com um pouco mais de tempo, finalmente arranjei paciência e coragem para tentar de novo. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aiyumi.github.io/pt/blog/slack-14.2-srs-and-pulse/"&gt;Ler o artigo completo…&lt;/a&gt; (5 mín restante para leitura)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/slack-14.2-srs-and-pulse/</guid><pubDate>Thu, 23 Mar 2017 18:55:46 GMT</pubDate></item><item><title>Internet Banking Caixa e Java 7 Update 51</title><link>https://aiyumi.github.io/pt/blog/internet-banking-caixa-java-7u51/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Na semana passada (lá pelo dia 17 de janeiro de 2014), tive de atualizar a instalação do Java. Fazendo isso, a versão do meu Java passou a ser "Java JRE 1.7.0_51", e o plugin de navegadores "Java(TM) Plug-in 10.51.2". Mas aí, o internet banking da Caixa parou de funcionar. Sempre caía numa página com código de erro CM12, dizendo que houve um problema no cadastro de computadores, com um link para o site da Oracle para baixar o Java, mesmo com o Java instalado e funcionando perfeitamente (até o site do Banco do Brasil funcionava, só o da Caixa que não). Tentei o telefone do 0800 mas a ligação vivia caindo e não consegui resolver nada, então fui procurar por conta própria. Como eu uso Linux, pensei que fosse algum problema relacionado ao Linux e pesquisei de tudo quanto era jeito e nada. Até que encontrei este post:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vivaolinux.com.br/dica/Java-JRE-17-51-Instalacao-facil-no-Debian-7-em-tres-passos"&gt;http://www.vivaolinux.com.br/dica/Java-JRE-17-51-Instalacao-facil-no-Debian-7-em-tres-passos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mais especificamente este comentário:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[5] Comentário enviado por jairus em 21/01/2014 - 11:33h:&lt;/p&gt;
&lt;p&gt;Bom dia pessoal !!!&lt;/p&gt;
&lt;p&gt;O que aconteceu com o Java 7_51, foi a questão de Lista de Sites de Excessões, que deverá ser configurada de acordo com a necessidade de cada usuário.&lt;/p&gt;
&lt;p&gt;A funcionalidade Lista de Sites de Exceção está sendo introduzida na release Java 7 Update 51. A inclusão do URL da aplicação
na Lista de exceções permite aos usuários executarem RIAs (Rich Internet Applications) que normalmente seriam bloqueados por
verificações de segurança.&lt;/p&gt;
&lt;p&gt;Veja a seguir os casos que permitirão que as aplicações sejam executadas por meio da inclusão do URL da aplicação na lista de
sites de exceção:&lt;/p&gt;
&lt;p&gt;.Se a aplicação não estiver assinada com um certificado de uma autoridade de certificação confiável.
.Se a aplicação estiver hospedada localmente.
.Arquivo Jar sem o atributo de manifesto de Permissão.
.Aplicação assinada com um certificado expirado.
.O certificado usado para assinar a aplicação não pode ser marcado para revogação.&lt;/p&gt;
&lt;p&gt;Gerenciar a Lista de Sites de Exceção&lt;/p&gt;
&lt;p&gt;A lista de sites de exceção é gerenciada na guia Segurança do Painel de Controle do Java. A lista é mostrada na guia. Para
adicionar, editar ou remover um URL da lista, clique em Editar Lista de Sites e siga as orientações mostradas.&lt;/p&gt;
&lt;p&gt;Adicionar um URL&lt;/p&gt;
&lt;p&gt;.Clique no botão Editar Lista de Sites.
.Clique em Adicionar na janela Lista de Sites de Exceção.
.Clique no campo vazio embaixo do campo Localização para inserir o URL.
.Exemplo: http://myexample.com (observação: o URL deve começar com http:// ou https://)
.Clique em OK para salvar o URL que você inseriu.
.Clique em Continuar na caixa de diálogo Advertência de Segurança.&lt;/p&gt;
&lt;p&gt;Editar um URL&lt;/p&gt;
&lt;p&gt;.Clique duas vezes no URL que você deseja editar na janela Lista de Sites de Exceção.
.Faça a alteração no URL.
.Clique em OK para salvar as alterações.&lt;/p&gt;
&lt;p&gt;Remover um URL&lt;/p&gt;
&lt;p&gt;.Clique no URL que você deseja remover na janela Lista de Sites de Exceção.
.Clique em Remover.
.Clique em OK para salvar sua alteração.&lt;/p&gt;
&lt;p&gt;Observação: se um conjunto de regras de implantação ativo for instalado no sistema, as regras de implantação terão
precedência sobre a lista de sites de exceção. A lista de sites de exceção só é considerada quando a regra padrão se
aplica. Consulte Conjunto de Regras de Implantação (http://docs.oracle.com/javase/7/docs/technotes/guides
/jweb/deployment_rules.html) para obter mais informações sobre regras de implantação.&lt;/p&gt;
&lt;p&gt;Fonte: http://java.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ok, pode ser isso, mas onde fica esse tal do painel de controle do Java? Nem sabia que existisse uma coisa dessas! Pesquisando mais um pouco, achei isso:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.oracle.com/brunoborges/entry/novo_java_7u51_e_os"&gt;https://blogs.oracle.com/brunoborges/entry/novo_java_7u51_e_os&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No Windows e no Mac, fica no painel de controle/preferências mesmo. No Linux, é para digitar o comando "jcontrol" num terminal. Vai aparecer uma interface gráfica com as configurações. Vá na aba "Segurança", depois em "Editar Lista de Sites" e em "Adicionar", então adicione estes dois endereços:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;https://internetbanking.caixa.gov.br
https://internetbankingpf.caixa.gov.br
&lt;/pre&gt;

&lt;p&gt;Outra forma de fazer isso é editar o arquivo "exception.sites" (é um arquivo de texto normal), colando os dois endereços nele.&lt;/p&gt;
&lt;p&gt;No Windows, fica em: C:\Users\%USER%\AppData\LocalLow\Sun\Java\Deployment\security\exception.sites&lt;/p&gt;
&lt;p&gt;No Mac: ~/Library/Application Support/Oracle/Java/Deployment/security/exception.sites&lt;/p&gt;
&lt;p&gt;No Linux: ~/.java/deployment/security/exception.sites&lt;/p&gt;
&lt;p&gt;Depois que eu fiz isso, o internet banking da Caixa finalmente voltou a funcionar!&lt;/p&gt;
&lt;p&gt;Resumindo, o problema era um recurso que adicionaram nessa última versão do Java, e estava nas configurações do Java e não importa qual o sistema operacional. O ruim é que a solução pode não ser tão fácil de descobrir, principalmente para usuários leigos. Não uso Java (só tenho instalado mais por causa dos sites de bancos que insistem em usá-lo), não acompanho as novidades, e mesmo que acompanhasse, não é fácil de saber quais delas vão me afetar. Mas agora felizmente resolveu, e espero que este post seja útil para mais gente.&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/internet-banking-caixa-java-7u51/</guid><pubDate>Sun, 26 Jan 2014 13:51:31 GMT</pubDate></item><item><title>O Poder dos SlackBuilds</title><link>https://aiyumi.github.io/pt/blog/power-of-slackbuilds/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Eu adoro os SlackBuilds, os scripts para compilar programas e criar pacotes para o Slackware. Fiquei maravilhada após ler um ótimo artigo explicando as vantagens dos SlackBuilds VS. compilar manualmente com os comandos "./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install". Eu queria poder colocar um link para ele, mas infelizmente o site não existe mais (era o site do GoblinX, uma distribuição brasileira baseada no Slackware, que depois virou ImagineOS, mas parou de ser atualizada faz um bom tempo).&lt;/p&gt;
&lt;p&gt;Outro dia, recebi uma mensagem de uma pessoa que estava tentando usar os meus scripts para &lt;a href="https://aiyumi.github.io/en/blog/installing-orca-on-slackware-14-0"&gt;instalar o Orca no Slackware&lt;/a&gt; (que aliás, atualizei para funcionarem no 14.1!), com dúvidas sobre SlackBuilds em geral. Então resolvi explicar, e essa foi a resposta que eu dei pra ele:&lt;/p&gt;
&lt;p&gt;Basicamente, o SlackBuild é apenas um Shell script que define algumas variáveis ​​comuns (como a arquitetura da sua máquina), aplica patches se necessário, e especifica quais opções devem ser passadas ao "./configure" (como dizer que gostaríamos de instalar os binários em "/usr/bin" e as bibliotecas em "/usr/lib", em vez de "/usr/local/bin" e "/usr/local/lib", que costumam ser os padrões se nada for especificado no "./configure"). Ele compila o programa, copia os arquivos de documentação para lugares apropriados, depois empacota tudo em um ".tgz" ou ".txz" (se você usar, por exemplo, "tar -tf nomedopacote.tgz" para ver seu conteúdo, vai perceber que é algo como a estrutura de diretórios do seu sistema de arquivos, com "usr/bin" etc, compactado com Tar e Gzip). Estes pacotes são muito fáceis de instalar com "installpkg". Quando um pacote é instalado, um arquivo com o nome do pacote sem a extensão ".t?z" é colocado em "/var/log/packages" com a lista de todos os arquivos que foram instalados com o programa. E uma das coisas que mais gosto é que eles também são muito fáceis de desinstalar com "removepkg". Se o programa foi compilado com "./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install" manualmente sem o SlackBuild (portanto, não empacotado e sem a lista de arquivos em "/ var / log / packages"), é muito mais difícil saber quais arquivos foram instalados onde, e para removê-los, o jeito mais fácil é entrar no diretório com os fontes do programa (é necessário baixar o código fonte de novo se não o tivermos mais, dar "./configure" com as mesmas opções que usamos para instalar pela primeira vez - se é que lembramos quais opções passamos :P - para gerar o makefile de novo), então usar "make uninstall" (e adivinha, nem todo programa que tem "make install" também tem a opção "make uninstall"! Então, já viu a confusão que pode dar?)... Por outro lado, se tivéssemos instalado o programa por meio de um pacote do Slackware, poderíamos removê-lo simplesmente fazendo "removepkg nomedopacote" e as ferramentas de pacote do Slackware se encarregariam de encontrar e remover os arquivos corretamente. Em outras palavras, é maravilhoso :D.&lt;/p&gt;
&lt;p&gt;Isso me ocorreu depois e eu não mandei na resposta, mas também tem gente que gosta de usar programas como o Checkinstall, que monitora a saída do "make install" para saber quais e onde foram parar os arquivos, depois cria um pacote instalável (suporta várias distribuições, incluindo o Slackware), mas particularmente prefiro usar SlackBuilds (mesmo que dê um pouco mais de trabalho criar um script se não existir um pronto para o programa que eu quero) porque serve como uma forma organizada de documentar as opções e os passos usados para compilar o programa, bem úteis quando precisar atualizar e compilar de novo.&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/power-of-slackbuilds/</guid><pubDate>Thu, 16 Jan 2014 23:38:15 GMT</pubDate></item><item><title>Instalando o Orca no Slackware 14.0</title><link>https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14-0/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Estava dando uma olhada no Slackware Current, que agora contém os pacotes que entrarão na próxima versão (14.1, se não mudar de nome como aconteceu com o 13.37). Para minha surpresa, foram incluídos o AT-SPI2-Core e o AT-SPI2-ATK, duas dependências muito importantes do &lt;a href="https://live.gnome.org/Orca"&gt;leitor de telas Orca&lt;/a&gt;, inclusive as versões são mais recentes do que as que eu tenho! Mas acho que não foi pensando em acessibilidade que eles colocaram (algum outro pacote novo deve ter essas libs como dependência) porque nos SlackBuilds ainda tem uns pacotes "./configurados" com "--disable-introspection" e "--disable-accessibility" (quando fui instalar o Orca no meu sistema atual, tive muita dor de cabeça até descobrir que vinha por padrão assim. Precisei habilitar as opções e compilar esses programas de novo). Mesmo assim, a cada nova versão do Slackware, mais dependências do Orca vêm sendo incorporadas à instalação padrão. Talvez, daqui a algumas versões, todas (ou quase todas) as dependências do Orca finalmente estejam preenchidas. Enquanto esse dia não chega, reuni os SlackBuilds para compilar o Orca e suas dependências e os &lt;a href="https://github.com/aiyumi/slackware-scripts"&gt;enviei para o Github&lt;/a&gt;. Alguns são meus (porque não achei prontos em lugar nenhum) e outros são cópias dos scripts do &lt;a href="http://www.slackbuilds.org/"&gt;Slackbuilds.org&lt;/a&gt; ou de pacotes do próprio Slackware (alguns que precisaram de ajustes e recompilação), todos reunidos em um só lugar para ficar mais fácil. Não são as versões mais recentes, mas são as específicas para funcionarem com as versões das bibliotecas que vêm por padrão no Slackware 14.0 (para construir as mais recentes seria necessário compilar muita coisa extra e daria muito mais trabalho). E para aqueles se perguntando se precisa instalar o Gnome, não, não precisa. Ao contrário do que possa parecer, apesar do Orca ser parte do Projeto Gnome, ele pode muito bem funcionar normalmente sem esse ambiente desktop tão pesado. Segue abaixo um guia rápido de como fazer para instalar o Orca no Slackware, &lt;strong&gt;sem&lt;/strong&gt; o Gnome: &lt;/p&gt;&lt;p&gt;&lt;a href="https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14-0/"&gt;Ler o artigo completo…&lt;/a&gt; (4 mín restante para leitura)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/installing-orca-on-slackware-14-0/</guid><pubDate>Sat, 28 Sep 2013 00:00:15 GMT</pubDate></item><item><title>Uma Introdução Básica ao SoX</title><link>https://aiyumi.github.io/pt/blog/sox-basic-intro/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;h4&gt;O que é o SoX?&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://sox.sourceforge.net/"&gt;SoX&lt;/a&gt; (Sound eXchange) é, como o autor o chama, o "canivete Suíço dos programas de processamento de som". Ele é gratuito, livre/de código aberto e roda em Windows, Mac e Linux.&lt;/p&gt;
&lt;p&gt;O SoX pode reproduzir, gravar, converter, editar, dividir, combinar e aplicar vários efeitos a
arquivos de áudio de muitos formatos diferentes. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aiyumi.github.io/pt/blog/sox-basic-intro/"&gt;Ler o artigo completo…&lt;/a&gt; (5 mín restante para leitura)&lt;/p&gt;&lt;/div&gt;</description><category>Audio</category><category>linux</category><guid>https://aiyumi.github.io/pt/blog/sox-basic-intro/</guid><pubDate>Fri, 09 Sep 2011 16:19:38 GMT</pubDate></item><item><title>Pequena Atualização de Status</title><link>https://aiyumi.github.io/pt/blog/status-update-2011-08-04/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Depois de atualizar o Speech-Dispatcher, o leitor de telas Orca não conseguia detectar mais o sintetizador de voz em Japonês. Pensei que fosse porque estava desatualizado, então o atualizei junto com o AT-SPI, aí ele parou de funcionar. Até que o problema fosse resolvido, fiquei na linha de comando (console). Deu para fazer algumas coisas interessantes no modo texto, mas infelizmente não consegui usar nenhum leitor de telas com Japonês. Agora que finalmente estou com o Orca e o japonês de volta, escrevo este artigo.&lt;/p&gt;
&lt;p&gt;Quanto ao problema que fez o Orca pifar... Diz-se que o AT-SPI1 e o 2 podem coexistir pacificamente no mesmo sistema, mas aqui, por algum motivo seus arquivos se misturaram e causaram um conflito. Não uso mais o AT-SPI1 por um longo tempo, então eu o removi. Depois de compilar e instalar o novo AT-SPI2, algumas dependências adicionais e o Orca, tudo parece estar de volta ao normal.&lt;/p&gt;
&lt;p&gt;É isso por hoje. Em outros artigos, talvez eu fale sobre algumas das coisas interessantes que podem ser feitas no console. Por agora, estou feliz ao poder usar japonês no PC de novo!&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>Site Updates</category><guid>https://aiyumi.github.io/pt/blog/status-update-2011-08-04/</guid><pubDate>Thu, 04 Aug 2011 16:18:09 GMT</pubDate></item><item><title>Como Comecei a Usar Linux</title><link>https://aiyumi.github.io/pt/blog/how-i-started-using-linux/</link><dc:creator>Aiyumi</dc:creator><description>&lt;div&gt;&lt;p&gt;Em 23 de junho de 2009, publiquei um artigo na lista de discussão do Slackware Users Group Brazil, contando como migrei e comecei a usar Linux. O texto original pode ser lido &lt;a href="http://groups.google.com/g/05e7fcc8/t/3ac5bdd6e5aafbe4/d/b3c85b56ff4ea1a0"&gt;aqui&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;&lt;a href="https://aiyumi.github.io/pt/blog/how-i-started-using-linux/"&gt;Ler o artigo completo…&lt;/a&gt; (1 mín restante para leitura)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://aiyumi.github.io/pt/blog/how-i-started-using-linux/</guid><pubDate>Mon, 14 Mar 2011 23:51:36 GMT</pubDate></item></channel></rss>